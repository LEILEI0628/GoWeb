// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/LEILEI0628/GoWeb/internal/repository"
	"github.com/LEILEI0628/GoWeb/internal/repository/cache"
	"github.com/LEILEI0628/GoWeb/internal/repository/dao"
	"github.com/LEILEI0628/GoWeb/internal/web"
	"github.com/LEILEI0628/GoWeb/internal/web/handler"
	"github.com/LEILEI0628/GoWeb/internal/web/router"
	"github.com/LEILEI0628/GoWeb/ioc"
	"github.com/gin-gonic/gin"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	cmdable := ioc.InitRedis()
	limiter := ioc.InitLimiter(cmdable)
	logger := ioc.InitGlobalLogger()
	v := ioc.InitMiddleware(limiter, logger)
	db := ioc.InitDB(logger)
	userDAO := dao.NewGORMUserDAO(db)
	userCache := cache.NewRedisUserCache(cmdable)
	userRepository := repository.NewCacheUserRepository(userDAO, userCache)
	userServiceInterface := ioc.InitUserService(userRepository)
	userHandler := handler.NewUserHandler(userServiceInterface)
	userRouters := router.NewUserRouters(userHandler)
	articleHandler := handler.NewArticleHandler()
	articleRouters := router.NewArticleRouters(articleHandler)
	registerRouters := web.NewRegisterRouters(userRouters, articleRouters)
	engine := ioc.InitGin(v, registerRouters)
	return engine
}
